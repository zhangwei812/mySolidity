{
	"compiler": {
		"version": "0.5.13+commit.5b0b510c"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "test",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "LogAddress",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"name": "LogBool",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "LogBytes",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "LogBytes32",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"name": "LogInt",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "LogUint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "registryAddress",
						"type": "address"
					}
				],
				"name": "RegistrySet",
				"type": "event"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "Validators2",
				"outputs": [
					{
						"internalType": "contract IValidators2",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "minElectableValidators",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxElectableValidators",
						"type": "uint256"
					}
				],
				"name": "electNValidatorSigners",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "electValidatorSigners",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "electabilityThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "electableValidators",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "min",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "max",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getElectableValidators",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getEpochNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "blockNumber",
						"type": "uint256"
					}
				],
				"name": "getEpochNumberOfBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getEpochSize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getTotalVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "registryAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_maxNumGroupsVotedFor",
						"type": "uint256"
					}
				],
				"name": "initialize",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "initialized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxNumGroupsVotedFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "registry",
				"outputs": [
					{
						"internalType": "contract IRegistry",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxNumGroupsVotedFor",
						"type": "uint256"
					}
				],
				"name": "setMaxNumGroupsVotedFor",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "registryAddress",
						"type": "address"
					}
				],
				"name": "setRegistry",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "group",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "lesser",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "greater",
						"type": "address"
					}
				],
				"name": "vote",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"constructor": {
					"params": {
						"test": "Set to true to skip implementation initialization"
					}
				},
				"getEpochSize()": {
					"return": "The current epoch size in blocks."
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setRegistry(address)": {
					"params": {
						"registryAddress": "The address of a registry contract for routing to other contracts."
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			}
		},
		"userdoc": {
			"methods": {
				"constructor": "Sets initialized == true on implementation contracts",
				"getEpochSize()": {
					"notice": "Returns the current epoch size in blocks."
				},
				"setRegistry(address)": {
					"notice": "Updates the address pointing to a Registry contract."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Election.sol": "Election"
		},
		"evmVersion": "petersburg",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Console.sol": {
			"keccak256": "0xf31f834ad985a2976d91b68a1c4edf926a9fe09b8e161eadf99adbaf2c1235c7",
			"urls": [
				"bzz-raw://a13192953dfa5e6419a91b21abad877577e4df17814037029cb69578bd03814e",
				"dweb:/ipfs/QmfLS1iw6SNFBvXkKj9qHkZ8P4Dp7mjKQaV7JAAjtvthTq"
			]
		},
		"contracts/Election.sol": {
			"keccak256": "0xe38c7f86b0e36d9b624b2cbf6a09312c4cfced742fedae83bca79c9d36ebdb10",
			"urls": [
				"bzz-raw://853b0c7370e0b8e9d53840a756e38886910593b59c905f4306c7e7078d8deb6c",
				"dweb:/ipfs/QmddEShBrDhnegdzgDNkqnXy6f3mzgcA6uQtXimRzZPYV9"
			]
		},
		"contracts/FixidityLib.sol": {
			"keccak256": "0x0e0bebd734ea7d05caa14dd4d6b62675c445ee76291307030856f9b5f0770f99",
			"urls": [
				"bzz-raw://cfdfd2237b1f8914dd8f10e5cfbbdf8ef360c12a3f3027610d87c6ef31c507ca",
				"dweb:/ipfs/QmUtkMCHXGR8xR8NDSKyr5ks2ZQcJQgogSv5PbJ8TdKu5z"
			]
		},
		"contracts/Heap.sol": {
			"keccak256": "0x814082930c5f78ebcb093da72f3a755d232e23e4fdca84ae0d3050df1d0c1809",
			"urls": [
				"bzz-raw://c58daee899237352eae4e32d26a795cd4102b21117cdd4087963d61de83238e2",
				"dweb:/ipfs/QmZNXNaxDdk89tvbYxzjY8Nf3eQLFfgbfMLMt3rnXjNU36"
			]
		},
		"contracts/IAccounts.sol": {
			"keccak256": "0x4c2daa9f025933c81364dd3a05f8443938324dc6b9d45d742974d09503d46e79",
			"urls": [
				"bzz-raw://c87fa727075bf4e271f789514d00b888fb4f7b10d3dda55ef9ca8ec67fb042e7",
				"dweb:/ipfs/QmX1kcr9VVPkA5fFf4kF2TmArS3jBtsdzSt5HVMvsvofBC"
			]
		},
		"contracts/ILockedGold.sol": {
			"keccak256": "0x22562c31312723af9d6e9a4856d34bc500689186ec1bbe0facc8ab52500b8ff1",
			"urls": [
				"bzz-raw://ec9407b1b03b664b4a9d13cd83290c5329c59678dff74e2f8184fcc6fdaa536e",
				"dweb:/ipfs/QmfGyU4WfYbeWC4gZjTRiwruFhAQaLFU3iXJHocTVho1Ct"
			]
		},
		"contracts/IRegistry.sol": {
			"keccak256": "0x83c12b6395bdac8526cad7e1089cfd70f31f8582333cbb4c1c94d755f9b0ffa2",
			"urls": [
				"bzz-raw://ba7781680b68887d2ab7c923e1f86a05c0091d75cd401de48a26b894f6483225",
				"dweb:/ipfs/QmQS1jzBHy67CZJCTkowRUhFgGbNaFavh9zV7KytRYiQpQ"
			]
		},
		"contracts/IValidators.sol": {
			"keccak256": "0x66d153d77fdfe6a468e9aa5feb069528f4bf694fca8ffd615a5f60a89c5ba4c2",
			"urls": [
				"bzz-raw://35530096df2c626c616fa207a3ffe93f1cd6768d3729421615d97c6e049f52d1",
				"dweb:/ipfs/Qmc1r4dzUaQFQCdQ3wR96EvppqgPa7xXZHMajnzWywBYm3"
			]
		},
		"contracts/IValidators2.sol": {
			"keccak256": "0xceb204b2fec9500f71b68d0101f9db84afb7d389b7d6ec8d74fb1515d74ba580",
			"urls": [
				"bzz-raw://ccd405843b00895f830f8447aba40775e05bd1214ab2aeb91d4e3422139671cc",
				"dweb:/ipfs/Qme1TaURzdqLNz1cqWBPThT1zSVzaZBYi1NL5eqTwRo48T"
			]
		},
		"contracts/Initializable.sol": {
			"keccak256": "0x83419175e397c0df7bf4657451fae81bad4ef97f3ff7b5e9823bad2b19777c77",
			"urls": [
				"bzz-raw://e75bf4255c6a635b802cff1eb914e3e72d7fbf19a267eb25e6c866a30099686d",
				"dweb:/ipfs/QmWm3GQoHtbGKdA8b7eiXoR9v9KJDEcGz52tzeTmocYqPC"
			]
		},
		"contracts/ReentrancyGuard.sol": {
			"keccak256": "0x17c28fd7feef362be94f535042d8d16dac211f93c82eaa1575e7c9f1c8d0b9f6",
			"urls": [
				"bzz-raw://b5578f631189b8b2eb10fc60660c1e0d2f159dad5df67054c65c166c9c4338f2",
				"dweb:/ipfs/QmdiC7WsNgvungHaL7F9ML2Vrd7NZYjBWnVQ9Aaow2JBUA"
			]
		},
		"contracts/SortedLinkedList.sol": {
			"keccak256": "0x6ce082705eb244a56fadac5b4379e4e2f35d4837b266a9e69f4f58c702dc074b",
			"urls": [
				"bzz-raw://411132cca8024d6292d962410b429c0e2ab2da3d42644a744a2461664e8c96ac",
				"dweb:/ipfs/QmaYJGEE3qcbDGqTjmsRC58Q4wRVACMYqofRZctYn5f7pS"
			]
		},
		"contracts/openzeppelin-solidity/contracts/GSN/Context.sol": {
			"keccak256": "0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061",
			"urls": [
				"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436",
				"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG"
			]
		},
		"contracts/openzeppelin-solidity/contracts/math/Math.sol": {
			"keccak256": "0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e",
			"urls": [
				"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c",
				"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp"
			]
		},
		"contracts/openzeppelin-solidity/contracts/math/SafeMath.sol": {
			"keccak256": "0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076",
			"urls": [
				"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f",
				"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq"
			]
		},
		"contracts/openzeppelin-solidity/contracts/ownership/Ownable.sol": {
			"keccak256": "0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24",
			"urls": [
				"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e",
				"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ"
			]
		}
	},
	"version": 1
}